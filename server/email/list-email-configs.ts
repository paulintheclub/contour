/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ email –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤—Å–µ—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π
 * 
 * –ó–∞–ø—É—Å–∫: npx tsx server/email/list-email-configs.ts
 */

import 'dotenv/config';
import { prisma } from '@/lib/prisma';

async function listEmailConfigs() {
  console.log('üìã Email –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π\n');
  console.log('=' .repeat(80));
  console.log('');

  try {
    const organizations = await prisma.organization.findMany({
      select: {
        id: true,
        name: true,
        emailEnabled: true,
        emailUser: true,
        emailHost: true,
        emailPort: true,
        createdAt: true,
      },
      orderBy: { createdAt: 'desc' },
    });

    if (organizations.length === 0) {
      console.log('‚ÑπÔ∏è  –ù–µ—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      console.log('   –°–æ–∑–¥–∞–π—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ Super Admin –ø–∞–Ω–µ–ª—å\n');
      return;
    }

    console.log(`–í—Å–µ–≥–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π: ${organizations.length}\n`);

    organizations.forEach((org, index) => {
      console.log(`${index + 1}. ${org.name}`);
      console.log(`   ID: ${org.id}`);
      console.log(`   Email –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: ${org.emailEnabled ? '‚úÖ –í–∫–ª—é—á–µ–Ω–∞' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω–∞'}`);
      
      if (org.emailEnabled && org.emailUser) {
        console.log(`   Email: ${org.emailUser}`);
        console.log(`   IMAP: ${org.emailHost}:${org.emailPort}`);
        console.log(`   üìù –¢–µ—Å—Ç: npx tsx server/email/test-organization-email.ts ${org.id}`);
      } else if (!org.emailUser) {
        console.log(`   ‚ö†Ô∏è  Email –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω`);
      }
      
      console.log('');
    });

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const enabledCount = organizations.filter(o => o.emailEnabled).length;
    const configuredCount = organizations.filter(o => o.emailEnabled && o.emailUser).length;

    console.log('=' .repeat(80));
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log(`   ‚Ä¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º email: ${enabledCount}/${organizations.length}`);
    console.log(`   ‚Ä¢ –ü–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö: ${configuredCount}/${organizations.length}`);
    console.log('');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

listEmailConfigs();

